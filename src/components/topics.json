{
  "web": {
    "frontend": {
      "react": {
        "info": "React introduces hooks to streamline state and side effect management, replacing class components. useState and useEffect simplify logic, while Virtual DOM and Context API enhance overall performance and data sharing."
      }
      ,
      "bootstrap": {
        "info" : "Bootstrap is a popular front-end framework for building responsive and mobile-first websites. It provides pre-designed templates, CSS, and JavaScript components, making it easy to create visually appealing and functional web pages."
      },
      "JSX": {
        "info" : "JSX, or JavaScript XML, is a syntax extension for JavaScript that allows developers to write HTML-like code within JavaScript. JSX is often used with React to describe what the UI should look like. It provides a concise and familiar way to create React elements, making the code more readable and maintainable."
      }
    },
    "backend": {
      "DB": {
        "info": "SQL is a standard programming language for managing relational databases, enabling tasks like structure management, data manipulation, and retrieval. NoSQL databases, including MongoDB, offer flexible storage solutions for diverse data structures, ideal for scalable and evolving scenarios."
      },
      "node.js": {
        "info": "Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine. It allows developers to build fast and scalable network applications using JavaScript on the server-side. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient."
      },
      "Express.js": {
        "info": "Express.js is a web application framework for Node.js, designed for building web applications and APIs. It provides robust features for routing, middleware support, and handling HTTP requests and responses. Express.js simplifies the development process by providing a minimal and flexible structure for building server-side applications."
      }
    },
    "mobile": {
      "crossPlatformFrameworks": {
        "reactnative": {
          "ReactComponentModel": {"info" : "React.Component is a class offering lifecycle methods like componentDidMount and componentWillUnmount. Its render method defines the component's UI with JSX."},
          "Redux": {"info" : "Redux is implemented by installing 'redux' and 'react-redux' packages. Actions define state changes, and reducers specify how the state reacts to these actions. The Redux store is set up using 'createStore', and components connect to the store with 'connect' from 'react-redux'. This connection enables components to access state and dispatch actions for state updates"}
        },
        "flutter": {
          "hotReload": {"info" : "Flutter's Hot Reload is a feature that enables developers to quickly and seamlessly make changes to their Dart code and see the immediate effects in the running application without restarting it. This real-time update, preserving the app's state, accelerates the development cycle by allowing developers to experiment, fix bugs, or introduce new features on-the-fly. Hot Reload is a fundamental tool in Flutter that enhances productivity and fosters an interactive coding experience"},
          "dartLanguage": {"info" : "Dart, created by Google, is a programming language recognized for its versatility in building cross-platform applications. With a clean syntax supporting both static and dynamic typing, Dart is fully object-oriented and notably used in the Flutter framework for creating native apps across different platforms from a single codebase. Its asynchronous programming features enhance efficiency in handling concurrent tasks. Dart's growing community and library ecosystem on Dart Package Manager (pub.dev) contribute to its increasing prominence in modern application development"},
          "MaterialUI": {"info" : "MaterialUI is a design system developed by Google for creating high-quality and consistent user interfaces across platforms. It offers a set of pre-designed components and guidelines for implementing Material Design principles in web and mobile applications. MaterialUI helps developers create visually appealing and intuitive user experiences with minimal effort."}
        }
      }
    }
  }
}
